// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetShoppingListsData, GetShoppingListsResponse, CreateShoppingListData, CreateShoppingListResponse, DeleteApiShoppingListByIdData, GetShoppingListData, GetShoppingListResponse, GetShoppingListError, PutApiShoppingListByIdData } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
};

export class ShoppingListApi {
    /**
     * Get all shopping lists
     * Returns all shopping lists for the current user
     */
    public static getShoppingLists<ThrowOnError extends boolean = false>(options?: Options<GetShoppingListsData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetShoppingListsResponse, unknown, ThrowOnError>({
            url: '/api/shopping-list',
            ...options
        });
    }
    
    /**
     * Create shopping list
     * Create a shopping list
     */
    public static createShoppingList<ThrowOnError extends boolean = false>(options: Options<CreateShoppingListData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<CreateShoppingListResponse, unknown, ThrowOnError>({
            url: '/api/shopping-list',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static deleteApiShoppingListById<ThrowOnError extends boolean = false>(options: Options<DeleteApiShoppingListByIdData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
            url: '/api/shopping-list/{id}',
            ...options
        });
    }
    
    /**
     * Get shopping list
     * Returns a specific shopping list, with it's items
     */
    public static getShoppingList<ThrowOnError extends boolean = false>(options: Options<GetShoppingListData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetShoppingListResponse, GetShoppingListError, ThrowOnError>({
            url: '/api/shopping-list/{id}',
            ...options
        });
    }
    
    public static putApiShoppingListById<ThrowOnError extends boolean = false>(options: Options<PutApiShoppingListByIdData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
            url: '/api/shopping-list/{id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}